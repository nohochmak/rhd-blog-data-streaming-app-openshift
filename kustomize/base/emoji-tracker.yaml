apiVersion: v1
kind: Service
metadata:
  name: quarkus-kstreams-emoji-tracker
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: quarkus-kstreams-emoji-tracker
  sessionAffinity: None
  type: ClusterIP
  clusterIP: None
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: quarkus-kstreams-emoji-tracker
  labels:
    app.kubernetes.io/part-of: streaming-apps
    app.openshift.io/runtime: quarkus
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"kafka"}]'
spec:
  serviceName: quarkus-kstreams-emoji-tracker
  replicas: 1
  selector:
    matchLabels:
      app: quarkus-kstreams-emoji-tracker
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: quarkus-kstreams-emoji-tracker
    spec:
      containers:
      - name: quarkus-kstreams-emoji-tracker
        image: quay.io/hgrahsl/emoji-tracker:1.0
        env:
          - name: KAFKA_STREAMS_STATE_DIR
            value: /data/kstreams/state
        ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
        imagePullPolicy: Always
        volumeMounts:
        - name: kstreams-state-stores
          mountPath: /data/kstreams/state
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: kstreams-state-stores
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # For OpenShift Local (CRC)
      #storageClassName: "crc-csi-hostpath-provisioner"
      # Original storageClassName: "gp2-csi"
      storageClassName: "gp2-csi"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: quarkus-kstreams-emoji-tracker
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: quarkus-kstreams-emoji-tracker
